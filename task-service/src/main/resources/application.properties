spring.application.name=TASK-SERVICE
server.port=5002

# DataSource configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate dialect for MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Show SQL statements in console
spring.jpa.show-sql=true

# Format SQL statements for readability
spring.jpa.properties.hibernate.format_sql=true

# Database schema generation strategy
spring.jpa.hibernate.ddl-auto=update

# swagger custom path
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
# Logging hibernate schema generation strategy
logging.level.org.hibernate.tool.schema.internal=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# adding eureka server
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8070/eureka/

# adding actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# adding Resilience4j
#the user used below is the name of the service which will be using this specific config
# of reslilence4j. if there are multiple service with different config,
# u can add multiple such different configurations and give that name to the @CircuitBreaker, @TimeLimiter or @Retry
resilience4j.circuitbreaker.instances.user.register-health-indicator=true
resilience4j.circuitbreaker.instances.user.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.user.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.user.sliding-window-size=5
resilience4j.circuitbreaker.instances.user.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.user.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.user.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.user.automatic-transition-from-open-to-half-open-enabled=true

# adding zipkin
management.tracing.sampling.probability=1.0

# adding kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.shreyas.bean.TaskAssignmentEvent
spring.kafka.topic.name=task_topics